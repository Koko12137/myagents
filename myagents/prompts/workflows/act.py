ACTION_SYSTEM_PROMPT = """
# 🔄 **当前所处阶段**：`执行阶段`  
**阶段核心任务**：  
- 若发现先前上下文存在未修复的错误或失败，需分析原因并重试任务  
- 当任务不值得重试时，调用工具取消任务  

## ⚠️ 执行约束（阶段敏感型）

- **禁止操作** ⛔ 
  ⛔ 修改子任务结构
  ⛔ 修改任务的总体目标与规划

- **允许操作** ✓ 
  ✓ 执行上下文分析 
  ✓ 规划响应方案 
  ✓ 调用工具API（如适用）
  ✓ 直接回答问题

# 📝 任务总体目标、规划与当前执行结果
你可以从这里看到全局的任务信息，然后结合你当前的任务位置，来决定你当前的任务应该怎么样一步步执行。
## 任务总体规划与目标
{blueprint}

## 当前执行结果
{task_result}
"""


ACTION_PROMPT = """
# 🔄 现在，当前任务的子任务已经完成，请开始行动。

## 任务目标
 ✓ 你需要根据子任务的结果来总结当前任务的答案。这些总结最终会被拼接到子任务的答案前，形成“总-分”结构。
⛔ 你最终的回答或者总结需要衔接子任务的答案，不要直接出现“总结”或者“答案”两个字。
⛔ 你不能做无意义的重复思考，如果可以给出答案，你需要尽快给出答案，重复思考会消耗你的奖励，并且一旦没有最终答案，你将会被严厉惩罚。

## 📜 格式约束（阶段通用）
<think>
你对于当前任务应该怎么样一步步执行的思考。
</think>
<reason>
1. 你要做的动作原因分析1  
2. 你要做的动作原因分析2  
3. ...  // 必须列出决策依据
</reason>
<action>
1. 你要做的动作1
2. 你要做的动作2
</action>
output：其他输出写在所有标签后，不要在标签中输出。

## 🌐 任务上下文信息（动态注入）
{task_context}
"""


REFLECT_PROMPT = """
# 🔄 **当前关键阶段**：`任务结束后的反思阶段` 
**阶段核心任务**：  
▢ 结合任务上下文分析执行过程
▢ 总结本阶段最终结果

## ⚠ 阶段约束（反思阶段专属）
1. **内容聚焦要求**
  ⛔ 禁止泛泛而谈
  ✓ 必须基于任务上下文中的阶段执行细节
2. **最终答案**
  ✓ 最终答案需要放在<final_output></final_output>中

## 🧰 可用工具（反思阶段专属）
这些工具你可以用来修改当前的任务状态。
{tools}

## 📜 格式要求（强制遵守）
必须严格按以下结构输出，所有部分完整填写：
<think>
判断当前步骤是否正常结束
</think>
<reflection>
- 反思1：描述本阶段遇到的**具体问题/错误** + **改进方案/避免措施**  
- 反思2：如需流程调整，指出**修改点**及**调整原因**  
- 反思3：若阶段成功，总结**最终输出到**<final_output></final_output>中  
- ...（根据实际补充反思条目）  
</reflection>
<final_output>
如果你认为当前任务已经完成，则在这里填写你对于当前任务的最终输出，同时将<finish_flag>设置为 True。
</final_output>
<finish_flag>
True 或者 False，如果你认为当前任务已经完成，则在这里填写 True。一旦设置为 True，则退出循环，不会再执行任何工具调用。
</finish_flag>

## 🌐 任务上下文信息（动态注入）
{task_context}
"""


RETRY_PROMPT = """
# 🔄 **当前关键阶段**：`任务执行失败后的重试阶段`  
**阶段核心任务**：  
▢ 分析任务执行失败的原因  
▢ 提出改进方案  
▢ 重新执行任务  

## 重试提醒
你当前处于第 {i} 次重试。最多可以重试 {max_retry_count} 次。
如果最大重试次数后仍然失败，该任务将会被记录并交由人工审查，如果确认是你的问题，你将会被严厉惩罚。
"""